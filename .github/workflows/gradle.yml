# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      PROD_SERVICE_NAME: spring-test
      PROD_PROJECT_HOME: ~/service/spring-test
      EXECUTABLE_NAME: spring-test.jar

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
        cache: gradle

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Build with Gradle
      run: ./gradlew build

    - name: Delivery Jar
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        password: ${{ secrets.PASSWORD }}
        port: ${{ secrets.PORT }}
        source: "./build/libs/*.jar"
        target: "~/service"
        strip_components: 1

    - name: Deploy
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        password: ${{ secrets.PASSWORD }}
        port: ${{ secrets.PORT }}
        source: ${{ env.PROD_SERVICE_NAME }}.*
        target: ${{ env.PROD_PROJECT_HOME }}
        strip_components: 1

#    - name: run
#      uses: appleboy/ssh-action@master
#      with:
#        host: ${{ secrets.HOST }}
#        username: ${{ secrets.USERNAME }}
#        password: ${{ secrets.PASSWORD }}
#        port: ${{ secrets.PORT }}
#        script: |
#          sudo \[ -f /etc/init.d/${{ env.PROD_SERVICE_NAME }} \] || sudo ln -sf ${{ env.PROD_PROJECT_HOME }}/${{ env.EXECUTABLE_NAME }} /etc/init.d/${{ env.PROD_SERVICE_NAME }}
#          sudo chown ec2-user:ec2-user ${{ env.PROD_PROJECT_HOME }}/${{ env.EXECUTABLE_NAME }}
#          sudo cp ${{ env.PROD_SERVICE_NAME }}.service /lib/systemd/system/
#          sudo cp ${{ env.PROD_SERVICE_NAME }}.conf ${{ env.PROD_PROJECT_HOME }}/${{ env.PROD_SERVICE_NAME }}.conf

